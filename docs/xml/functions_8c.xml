<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="functions_8c" kind="file" language="C++">
    <compoundname>functions.c</compoundname>
    <includes refid="log_8h" local="yes">../../log/log.h</includes>
    <includes refid="analytic_2global_8h" local="yes">../global.h</includes>
    <includes refid="functions_8h" local="yes">../functions.h</includes>
    <incdepgraph>
      <node id="7">
        <label>stdbool.h</label>
      </node>
      <node id="4">
        <label>stdarg.h</label>
      </node>
      <node id="8">
        <label>../functions.h</label>
        <link refid="functions_8h"/>
      </node>
      <node id="6">
        <label>SDL2/SDL.h</label>
      </node>
      <node id="1">
        <label>analytic/src/functions.c</label>
        <link refid="functions_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>../global.h</label>
        <link refid="analytic_2global_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../../log/log.h</label>
        <link refid="log_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="functions_8c_1a6035d73bb5eb43e59b38cc63e2c63d82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Analytic_LineFunction</definition>
        <argsstring>(Analytic_Line line, float x)</argsstring>
        <name>Analytic_LineFunction</name>
        <param>
          <type><ref refid="struct_analytic___line" kindref="compound">Analytic_Line</ref></type>
          <declname>line</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Mathematical function to get y. </para>
        </briefdescription>
        <detaileddescription>
<para>The function calculates the y with a mathematic formula</para>
<para><formula id="0">$y = mx + q$</formula></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>line</parametername>
</parameternamelist>
<parameterdescription>
<para>Contains the line parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Unknown to calculate the y </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int The calculated y </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="analytic/src/functions.c" line="5" column="5" bodyfile="analytic/src/functions.c" bodystart="5" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="functions_8c_1a338af7326772bf75a1f3faff419e29b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Analytic_ParabolaYFunction</definition>
        <argsstring>(Analytic_Parabola parabola, float x)</argsstring>
        <name>Analytic_ParabolaYFunction</name>
        <param>
          <type><ref refid="struct_analytic___parabola" kindref="compound">Analytic_Parabola</ref></type>
          <declname>parabola</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Mathematical function to get y of parables with vertical symmetry axis. </para>
        </briefdescription>
        <detaileddescription>
<para>The function calculates the y with a mathematic formula</para>
<para><formula id="1">$y = ax^2 + bx + c$</formula></para>
<para>All the parameters are transformed into their opposites because the sdl plane is inverse<linebreak/>
so the used formula is</para>
<para><formula id="2">$y = - ax^2 - bx - c$</formula></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parabola</parametername>
</parameternamelist>
<parameterdescription>
<para>Contains the parabola parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Unknown to calculate the y </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float The calculated y</para>
</simplesect>
<simplesect kind="see"><para><ref refid="struct_analytic___parabola" kindref="compound">Analytic_Parabola</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="analytic_2global_8h_1a447a35b01759e8cb5ba438c5d72f54b4" kindref="member">Analytic_ParabolaType</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="analytic/src/functions.c" line="10" column="7" bodyfile="analytic/src/functions.c" bodystart="10" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="functions_8c_1a3d5ec75330f5ff3427823ed0c74c89ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Analytic_ParabolaXFunction</definition>
        <argsstring>(Analytic_Parabola parabola, float y)</argsstring>
        <name>Analytic_ParabolaXFunction</name>
        <param>
          <type><ref refid="struct_analytic___parabola" kindref="compound">Analytic_Parabola</ref></type>
          <declname>parabola</declname>
        </param>
        <param>
          <type>float</type>
          <declname>y</declname>
        </param>
        <briefdescription>
<para>Mathematical function to get x of parables with horizontal symmetry axis. </para>
        </briefdescription>
        <detaileddescription>
<para>The function calculates the x with a mathematic formula</para>
<para><formula id="3">$x = ay^2 + by + c$</formula></para>
<para>But the sdl plane is inverse so the used formula is</para>
<para><formula id="4">$x = - (ay^2 + by - c)$</formula></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parabola</parametername>
</parameternamelist>
<parameterdescription>
<para>Contains the parabola parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Unknown to calculate the x </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float The calculated x</para>
</simplesect>
<simplesect kind="see"><para><ref refid="struct_analytic___parabola" kindref="compound">Analytic_Parabola</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="analytic_2global_8h_1a447a35b01759e8cb5ba438c5d72f54b4" kindref="member">Analytic_ParabolaType</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="analytic/src/functions.c" line="15" column="7" bodyfile="analytic/src/functions.c" bodystart="15" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="functions_8c_1a3f76b8b0d36bb8450732ac5b7ad1a863" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Analytic_CircumferenceRadiusFunction</definition>
        <argsstring>(Analytic_Circumference circumference)</argsstring>
        <name>Analytic_CircumferenceRadiusFunction</name>
        <param>
          <type><ref refid="struct_analytic___circumference" kindref="compound">Analytic_Circumference</ref></type>
          <declname>circumference</declname>
        </param>
        <briefdescription>
<para>Mathematical function to calculate the radius of a circumference. </para>
        </briefdescription>
        <detaileddescription>
<para>The function calculates the radius with a mathematic formula</para>
<para><formula id="5">$r = \sqrt{\frac{a^{2}}{4} + \frac{b^{2}}{4} - c}$</formula></para>
<para><simplesect kind="warning"><para>The function also checks for a negative radius. <linebreak/>
In this case the program will exit returning a fatal error. <linebreak/>
Before calling this function, check that the <linebreak/>
given circumference is really a circumference!</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>circumference</parametername>
</parameternamelist>
<parameterdescription>
<para>Contains the circumference parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float The calculated radius</para>
</simplesect>
<simplesect kind="see"><para><ref refid="struct_analytic___circumference" kindref="compound">Analytic_Circumference</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="analytic/src/functions.c" line="20" column="7" bodyfile="analytic/src/functions.c" bodystart="20" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="functions_8c_1abe5a4543009708604f165fc7db8bdd4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Analytic_CircumferenceXCentreFunction</definition>
        <argsstring>(Analytic_Circumference circumference)</argsstring>
        <name>Analytic_CircumferenceXCentreFunction</name>
        <param>
          <type><ref refid="struct_analytic___circumference" kindref="compound">Analytic_Circumference</ref></type>
          <declname>circumference</declname>
        </param>
        <briefdescription>
<para>Mathematical function to calculate the x of the centre of a circumference. </para>
        </briefdescription>
        <detaileddescription>
<para>The function calculates the x with a mathematic formula</para>
<para><formula id="6">$x = -\frac{a}{2}$</formula></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>circumference</parametername>
</parameternamelist>
<parameterdescription>
<para>Contains the circumference parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float The calculated x</para>
</simplesect>
<simplesect kind="see"><para><ref refid="struct_analytic___circumference" kindref="compound">Analytic_Circumference</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="analytic/src/functions.c" line="31" column="7" bodyfile="analytic/src/functions.c" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="functions_8c_1a92231210c9c966ede33e488827b542a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Analytic_CircumferenceYCentreFunction</definition>
        <argsstring>(Analytic_Circumference circumference)</argsstring>
        <name>Analytic_CircumferenceYCentreFunction</name>
        <param>
          <type><ref refid="struct_analytic___circumference" kindref="compound">Analytic_Circumference</ref></type>
          <declname>circumference</declname>
        </param>
        <briefdescription>
<para>Mathematical function to calculate the y of the centre of a circumference. </para>
        </briefdescription>
        <detaileddescription>
<para>The function calculates the y with a mathematic formula</para>
<para><formula id="7">$y = -\frac{b}{2}$</formula></para>
<para>The result is transformed into its opposite because the SDL plan is inverse so</para>
<para><formula id="8">$y = \frac{b}{2}$</formula></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>circumference</parametername>
</parameternamelist>
<parameterdescription>
<para>Contains the circumference parameters </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float The calculated y</para>
</simplesect>
<simplesect kind="see"><para><ref refid="struct_analytic___circumference" kindref="compound">Analytic_Circumference</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="analytic/src/functions.c" line="36" column="7" bodyfile="analytic/src/functions.c" bodystart="36" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="functions_8c_1a40c3be7865f7cc46313f47c5a29ac906" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Analytic_HyperboleYFunction</definition>
        <argsstring>(Analytic_Hyperbole hyperbole, float x)</argsstring>
        <name>Analytic_HyperboleYFunction</name>
        <param>
          <type><ref refid="struct_analytic___hyperbole" kindref="compound">Analytic_Hyperbole</ref></type>
          <declname>hyperbole</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Mathematical function to get y of hyperboles with vertical symmetry axis. </para>
        </briefdescription>
        <detaileddescription>
<para>The function calculates the y with a mathematic formula</para>
<para><formula id="9">$y = \pm \sqrt{-b^{2} + \frac{a^{2}}{b^{2}}x^{2}}$</formula></para>
<para>The function calculates the second y and the first <linebreak/>
is drawn by exploiting the symmetry property of the <linebreak/>
hyperbole for more precise coordinates<linebreak/>
 <formula id="10">$y = - \sqrt{-b^{2} + \frac{a^{2}}{b^{2}}x^{2}}$</formula></para>
<para><simplesect kind="warning"><para>The function also checks that the hyperbole parameters <linebreak/>
are larger and different from zero in order to avoid errors <linebreak/>
during mathematical calculations. If this were the case, <linebreak/>
the function would block the program and return a fatal error</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hyperbole</parametername>
</parameternamelist>
<parameterdescription>
<para>Contains the hyperbole parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Unknown to calculate the y </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float The calculated y</para>
</simplesect>
<simplesect kind="see"><para><ref refid="struct_analytic___hyperbole" kindref="compound">Analytic_Hyperbole</ref> </para>
</simplesect>
<simplesect kind="see"><para>Analytic_Analytic_HyperboleType </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="analytic/src/functions.c" line="41" column="7" bodyfile="analytic/src/functions.c" bodystart="41" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="functions_8c_1a17880b2292a03fb34fe9249bca44d5c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Analytic_HyperboleXFunction</definition>
        <argsstring>(Analytic_Hyperbole hyperbole, float x)</argsstring>
        <name>Analytic_HyperboleXFunction</name>
        <param>
          <type><ref refid="struct_analytic___hyperbole" kindref="compound">Analytic_Hyperbole</ref></type>
          <declname>hyperbole</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Mathematical function to get y of hyperboles with horizontal symmetry axis. </para>
        </briefdescription>
        <detaileddescription>
<para>The function calculates the y with a mathematic formula</para>
<para><formula id="11">$y = \pm \sqrt{b^{2} + \frac{a^{2}}{b^{2}}x^{2}}$</formula></para>
<para>The function calculates the second y and the first is drawn by exploiting the symmetry property of the hyperbole for more precise coordinates</para>
<para><formula id="12">$y = - \sqrt{b^{2} + \frac{a^{2}}{b^{2}}x^{2}}$</formula></para>
<para><simplesect kind="warning"><para>The function also checks that the hyperbole parameters <linebreak/>
are larger and different from zero in order to avoid errors <linebreak/>
during mathematical calculations. If this were the case, <linebreak/>
the function would block the program and return a fatal error</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hyperbole</parametername>
</parameternamelist>
<parameterdescription>
<para>Contains the hyperbole parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Unknown to calculate the y </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float The calculated y</para>
</simplesect>
<simplesect kind="see"><para><ref refid="struct_analytic___hyperbole" kindref="compound">Analytic_Hyperbole</ref> </para>
</simplesect>
<simplesect kind="see"><para><ref refid="analytic_2global_8h_1ab73e7d4dd747c31293420cd98a14c8ae" kindref="member">Analytic_HyperboleType</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="analytic/src/functions.c" line="51" column="7" bodyfile="analytic/src/functions.c" bodystart="51" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="functions_8c_1abca3c5edb5a119eb4976ec375cf3abea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Analytic_HyperboleKFunction</definition>
        <argsstring>(Analytic_Hyperbole hyperbole, float x)</argsstring>
        <name>Analytic_HyperboleKFunction</name>
        <param>
          <type><ref refid="struct_analytic___hyperbole" kindref="compound">Analytic_Hyperbole</ref></type>
          <declname>hyperbole</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Mathematical function to get y of equilateral hyperbolas. </para>
        </briefdescription>
        <detaileddescription>
<para>The function calculates the y with a mathematic formula</para>
<para><formula id="13">$xy = k$</formula></para>
<para>So to extract the y we use</para>
<para><formula id="14">$y = \frac{k}{x}$</formula></para>
<para><simplesect kind="warning"><para>When x=0 the formula returns NaN;</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hyperbole</parametername>
</parameternamelist>
<parameterdescription>
<para>Contains the hyperbole parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Unknown to calculate the y </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float The calculated y </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="analytic/src/functions.c" line="61" column="7" bodyfile="analytic/src/functions.c" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="functions_8c_1a8505a4fc8732149bc6c3768bf4e91c3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Analytic_HyperboleHomographicFunction</definition>
        <argsstring>(Analytic_Hyperbole hyperbole, float x)</argsstring>
        <name>Analytic_HyperboleHomographicFunction</name>
        <param>
          <type><ref refid="struct_analytic___hyperbole" kindref="compound">Analytic_Hyperbole</ref></type>
          <declname>hyperbole</declname>
        </param>
        <param>
          <type>float</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Mathematical function to draw hyperbolas. </para>
        </briefdescription>
        <detaileddescription>
<para>The function calculates the y with a mathematic formula</para>
<para><formula id="15">$y = \frac{ax + b}{cx + d}$</formula></para>
<para><simplesect kind="warning"><para>The function also checks that c is different from 0 and that there is no proportion between the parameters (ad = db). In the case it stops the program and returns a fatal error. So first please check the hyperbola parameters</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>hyperbole</parametername>
</parameternamelist>
<parameterdescription>
<para>Contains the hyperbole parameters </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Unknown to calculate the y </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float The calculated y </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="analytic/src/functions.c" line="66" column="7" bodyfile="analytic/src/functions.c" bodystart="66" bodyend="75"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;../../log/log.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../global.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../functions.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="functions_8h_1a6035d73bb5eb43e59b38cc63e2c63d82" kindref="member">Analytic_LineFunction</ref>(<ref refid="struct_analytic___line" kindref="compound">Analytic_Line</ref><sp/>line,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="6"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>round(-1<sp/>*<sp/>line.<ref refid="struct_analytic___line_1ac51334f57ef8b81c0629c9421798c344" kindref="member">m</ref><sp/>*<sp/>x<sp/>+<sp/>(-1<sp/>*<sp/>line.<ref refid="struct_analytic___line_1a0a19a0620af7373e3ddba0ce4e1058e1" kindref="member">q</ref><sp/>*<sp/><ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref><sp/>/<sp/>10));</highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="functions_8h_1a338af7326772bf75a1f3faff419e29b5" kindref="member">Analytic_ParabolaYFunction</ref>(<ref refid="struct_analytic___parabola" kindref="compound">Analytic_Parabola</ref><sp/>parabola,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(-(parabola.<ref refid="struct_analytic___parabola_1a4aec1a5be9d9a4a394a2e49e9744286e" kindref="member">a</ref><sp/>*<sp/>x<sp/>*<sp/>x)<sp/>-<sp/>(parabola.<ref refid="struct_analytic___parabola_1a83fc1af92e29717b4513d121b0c72c7d" kindref="member">b</ref><sp/>*<sp/>x)<sp/>-<sp/>(parabola.<ref refid="struct_analytic___parabola_1ae78103ab33f03590e84ff7bc735629d7" kindref="member">c</ref>));</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="functions_8h_1a3d5ec75330f5ff3427823ed0c74c89ab" kindref="member">Analytic_ParabolaXFunction</ref>(<ref refid="struct_analytic___parabola" kindref="compound">Analytic_Parabola</ref><sp/>parabola,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-((parabola.<ref refid="struct_analytic___parabola_1a4aec1a5be9d9a4a394a2e49e9744286e" kindref="member">a</ref><sp/>*<sp/>y<sp/>*<sp/>y)<sp/>+<sp/>(parabola.<ref refid="struct_analytic___parabola_1a83fc1af92e29717b4513d121b0c72c7d" kindref="member">b</ref><sp/>*<sp/>y)<sp/>-<sp/>(parabola.<ref refid="struct_analytic___parabola_1ae78103ab33f03590e84ff7bc735629d7" kindref="member">c</ref>));</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="functions_8h_1a3f76b8b0d36bb8450732ac5b7ad1a863" kindref="member">Analytic_CircumferenceRadiusFunction</ref>(<ref refid="struct_analytic___circumference" kindref="compound">Analytic_Circumference</ref><sp/>circumference)</highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r2<sp/>=<sp/>(pow(circumference.<ref refid="struct_analytic___circumference_1a4aec1a5be9d9a4a394a2e49e9744286e" kindref="member">a</ref>,<sp/>2)<sp/>/<sp/>4)<sp/>+<sp/>(pow(circumference.<ref refid="struct_analytic___circumference_1a83fc1af92e29717b4513d121b0c72c7d" kindref="member">b</ref>,<sp/>2)<sp/>/<sp/>4)<sp/>-<sp/>circumference.<ref refid="struct_analytic___circumference_1ae78103ab33f03590e84ff7bc735629d7" kindref="member">c</ref>;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(r2<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_fatal(</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>not<sp/>a<sp/>circumference!<sp/>(negative<sp/>radius)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(r2);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="functions_8h_1abe5a4543009708604f165fc7db8bdd4c" kindref="member">Analytic_CircumferenceXCentreFunction</ref>(<ref refid="struct_analytic___circumference" kindref="compound">Analytic_Circumference</ref><sp/>circumference)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-(circumference.<ref refid="struct_analytic___circumference_1a4aec1a5be9d9a4a394a2e49e9744286e" kindref="member">a</ref><sp/>/<sp/>2);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="functions_8h_1a92231210c9c966ede33e488827b542a0" kindref="member">Analytic_CircumferenceYCentreFunction</ref>(<ref refid="struct_analytic___circumference" kindref="compound">Analytic_Circumference</ref><sp/>circumference)</highlight></codeline>
<codeline lineno="37"><highlight class="normal">{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>circumference.<ref refid="struct_analytic___circumference_1a83fc1af92e29717b4513d121b0c72c7d" kindref="member">b</ref><sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="functions_8h_1a40c3be7865f7cc46313f47c5a29ac906" kindref="member">Analytic_HyperboleYFunction</ref>(<ref refid="struct_analytic___hyperbole" kindref="compound">Analytic_Hyperbole</ref><sp/>hyperbole,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hyperbole.<ref refid="struct_analytic___hyperbole_1a4aec1a5be9d9a4a394a2e49e9744286e" kindref="member">a</ref><sp/>&lt;=<sp/>0<sp/>||<sp/>hyperbole.<ref refid="struct_analytic___hyperbole_1a83fc1af92e29717b4513d121b0c72c7d" kindref="member">b</ref><sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_fatal(</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>not<sp/>a<sp/>hyperbole!<sp/>(domain<sp/>error<sp/>or<sp/>division<sp/>by<sp/>zero)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-sqrt(-((hyperbole.<ref refid="struct_analytic___hyperbole_1a4aec1a5be9d9a4a394a2e49e9744286e" kindref="member">a</ref><sp/>*<sp/>hyperbole.<ref refid="struct_analytic___hyperbole_1a83fc1af92e29717b4513d121b0c72c7d" kindref="member">b</ref>)<sp/>-<sp/>(hyperbole.<ref refid="struct_analytic___hyperbole_1a83fc1af92e29717b4513d121b0c72c7d" kindref="member">b</ref><sp/>*<sp/>x<sp/>*<sp/>x))<sp/>/<sp/>hyperbole.<ref refid="struct_analytic___hyperbole_1a4aec1a5be9d9a4a394a2e49e9744286e" kindref="member">a</ref>);</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="functions_8h_1a17880b2292a03fb34fe9249bca44d5c8" kindref="member">Analytic_HyperboleXFunction</ref>(<ref refid="struct_analytic___hyperbole" kindref="compound">Analytic_Hyperbole</ref><sp/>hyperbole,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hyperbole.<ref refid="struct_analytic___hyperbole_1a4aec1a5be9d9a4a394a2e49e9744286e" kindref="member">a</ref><sp/>&lt;=<sp/>0<sp/>||<sp/>hyperbole.<ref refid="struct_analytic___hyperbole_1a83fc1af92e29717b4513d121b0c72c7d" kindref="member">b</ref><sp/>&lt;=<sp/>0)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_fatal(</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>not<sp/>a<sp/>hyperbole!<sp/>(domain<sp/>error<sp/>or<sp/>division<sp/>by<sp/>zero)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-sqrt(((hyperbole.<ref refid="struct_analytic___hyperbole_1a4aec1a5be9d9a4a394a2e49e9744286e" kindref="member">a</ref><sp/>*<sp/>hyperbole.<ref refid="struct_analytic___hyperbole_1a83fc1af92e29717b4513d121b0c72c7d" kindref="member">b</ref>)<sp/>+<sp/>(hyperbole.<ref refid="struct_analytic___hyperbole_1a83fc1af92e29717b4513d121b0c72c7d" kindref="member">b</ref><sp/>*<sp/>x<sp/>*<sp/>x))<sp/>/<sp/>hyperbole.<ref refid="struct_analytic___hyperbole_1a4aec1a5be9d9a4a394a2e49e9744286e" kindref="member">a</ref>);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="functions_8h_1abca3c5edb5a119eb4976ec375cf3abea" kindref="member">Analytic_HyperboleKFunction</ref>(<ref refid="struct_analytic___hyperbole" kindref="compound">Analytic_Hyperbole</ref><sp/>hyperbole,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>hyperbole.<ref refid="struct_analytic___hyperbole_1a9fc4cca635a26c692681a7071e379aa7" kindref="member">k</ref><sp/>/<sp/>-x;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="functions_8h_1a8505a4fc8732149bc6c3768bf4e91c3e" kindref="member">Analytic_HyperboleHomographicFunction</ref>(<ref refid="struct_analytic___hyperbole" kindref="compound">Analytic_Hyperbole</ref><sp/>hyperbole,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="67"><highlight class="normal">{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hyperbole.<ref refid="struct_analytic___hyperbole_1ae78103ab33f03590e84ff7bc735629d7" kindref="member">c</ref><sp/>==<sp/>0<sp/>||<sp/>hyperbole.<ref refid="struct_analytic___hyperbole_1a4aec1a5be9d9a4a394a2e49e9744286e" kindref="member">a</ref><sp/>*<sp/>hyperbole.<ref refid="struct_analytic___hyperbole_1a3fbbd8a3959e76a2bc3455d3bade52dc" kindref="member">d</ref><sp/>==<sp/>hyperbole.<ref refid="struct_analytic___hyperbole_1ae78103ab33f03590e84ff7bc735629d7" kindref="member">c</ref><sp/>*<sp/>hyperbole.<ref refid="struct_analytic___hyperbole_1a83fc1af92e29717b4513d121b0c72c7d" kindref="member">b</ref>)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_fatal(</highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>not<sp/>a<sp/>hyperbole!<sp/>c<sp/>=<sp/>0<sp/>or<sp/>ad<sp/>=<sp/>cb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(hyperbole.<ref refid="struct_analytic___hyperbole_1a4aec1a5be9d9a4a394a2e49e9744286e" kindref="member">a</ref><sp/>*<sp/>x<sp/>+<sp/>hyperbole.<ref refid="struct_analytic___hyperbole_1a83fc1af92e29717b4513d121b0c72c7d" kindref="member">b</ref>)<sp/>/<sp/>(hyperbole.<ref refid="struct_analytic___hyperbole_1ae78103ab33f03590e84ff7bc735629d7" kindref="member">c</ref><sp/>*<sp/>x<sp/>+<sp/>hyperbole.<ref refid="struct_analytic___hyperbole_1a3fbbd8a3959e76a2bc3455d3bade52dc" kindref="member">d</ref>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="analytic/src/functions.c"/>
  </compounddef>
</doxygen>
