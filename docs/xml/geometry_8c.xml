<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd"
         version="1.8.17">
    <compounddef id="geometry_8c" kind="file" language="C++">
        <compoundname>geometry.c</compoundname>
        <includes local="no">SDL2/SDL.h</includes>
        <includes local="no">stdbool.h</includes>
        <includes refid="log_8h" local="yes">../../log/log.h</includes>
        <includes refid="analytic_2global_8h" local="yes">../global.h</includes>
        <includes refid="geometry_8h" local="yes">../geometry.h</includes>
        <includes refid="functions_8h" local="yes">../functions.h</includes>
        <includes refid="scale_8h" local="yes">../scale.h</includes>
        <incdepgraph>
            <node id="3">
                <label>stdbool.h</label>
            </node>
            <node id="6">
                <label>stdarg.h</label>
            </node>
            <node id="9">
                <label>../functions.h</label>
                <link refid="functions_8h"/>
            </node>
            <node id="10">
                <label>../scale.h</label>
                <link refid="scale_8h"/>
            </node>
            <node id="8">
                <label>../geometry.h</label>
                <link refid="geometry_8h"/>
            </node>
            <node id="2">
                <label>SDL2/SDL.h</label>
            </node>
            <node id="7">
                <label>../global.h</label>
                <link refid="analytic_2global_8h"/>
                <childnode refid="2" relation="include">
                </childnode>
                <childnode refid="3" relation="include">
                </childnode>
            </node>
            <node id="4">
                <label>../../log/log.h</label>
                <link refid="log_8h_source"/>
                <childnode refid="5" relation="include">
                </childnode>
                <childnode refid="6" relation="include">
                </childnode>
            </node>
            <node id="1">
                <label>analytic/src/geometry.c</label>
                <link refid="geometry_8c"/>
                <childnode refid="2" relation="include">
                </childnode>
                <childnode refid="3" relation="include">
                </childnode>
                <childnode refid="4" relation="include">
                </childnode>
                <childnode refid="7" relation="include">
                </childnode>
                <childnode refid="8" relation="include">
                </childnode>
                <childnode refid="9" relation="include">
                </childnode>
                <childnode refid="10" relation="include">
                </childnode>
            </node>
            <node id="5">
                <label>stdio.h</label>
            </node>
        </incdepgraph>
        <sectiondef kind="func">
            <memberdef kind="function" id="geometry_8c_1a91271cf91f67ee374615ad91f4ddff9f" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>void</type>
                <definition>void Analytic_createPoint</definition>
                <argsstring>(Analytic_Position position, SDL_Color color, SDL_Renderer *renderer)</argsstring>
                <name>Analytic_createPoint</name>
                <param>
                    <type>
                        <ref refid="struct_analytic___position" kindref="compound">Analytic_Position</ref>
                    </type>
                    <declname>position</declname>
                </param>
                <param>
                    <type>SDL_Color</type>
                    <declname>color</declname>
                </param>
                <param>
                    <type>SDL_Renderer *</type>
                    <declname>renderer</declname>
                </param>
                <briefdescription>
                    <para>Function to draw a point.</para>
                </briefdescription>
                <detaileddescription>
                    <para>The function converts the relative position into an absolute and draws the point</para>
                    <para>
                        <parameterlist kind="param">
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>position</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>Relative position of the point</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>color</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>Color of the point</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>renderer</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>Renderer to which to draw the point</para>
                                </parameterdescription>
                            </parameteritem>
                        </parameterlist>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="analytic/src/geometry.c" line="10" column="6" bodyfile="analytic/src/geometry.c"
                          bodystart="10" bodyend="14"/>
            </memberdef>
            <memberdef kind="function" id="geometry_8c_1a8f1d8e436b2a4c4a1a307270be8a479c" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>void</type>
                <definition>void Analytic_createLine</definition>
                <argsstring>(Analytic_Line line, SDL_Renderer *renderer)</argsstring>
                <name>Analytic_createLine</name>
                <param>
                    <type>
                        <ref refid="struct_analytic___line" kindref="compound">Analytic_Line</ref>
                    </type>
                    <declname>line</declname>
                </param>
                <param>
                    <type>SDL_Renderer *</type>
                    <declname>renderer</declname>
                </param>
                <briefdescription>
                    <para>Function to draw a straight line.</para>
                </briefdescription>
                <detaileddescription>
                    <para>This function identifies the type of line based
                        <linebreak/>
                        on the parameters provided and then draws the line point by point
                    </para>
                    <para>
                        <parameterlist kind="param">
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>line</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>Contains the line parameters</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>renderer</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>Renderer to which to draw the line</para>
                                </parameterdescription>
                            </parameteritem>
                        </parameterlist>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="analytic/src/geometry.c" line="16" column="6" bodyfile="analytic/src/geometry.c"
                          bodystart="16" bodyend="23"/>
            </memberdef>
            <memberdef kind="function" id="geometry_8c_1a22dc585163e64ffc15c1b38c4edfdcbd" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>void</type>
                <definition>void Analytic_createParabola</definition>
                <argsstring>(Analytic_Parabola parabola, SDL_Renderer *renderer)</argsstring>
                <name>Analytic_createParabola</name>
                <param>
                    <type>
                        <ref refid="struct_analytic___parabola" kindref="compound">Analytic_Parabola</ref>
                    </type>
                    <declname>parabola</declname>
                </param>
                <param>
                    <type>SDL_Renderer *</type>
                    <declname>renderer</declname>
                </param>
                <briefdescription>
                    <para>Function to draw a parabola.</para>
                </briefdescription>
                <detaileddescription>
                    <para>The function determines the position
                        <linebreak/>
                        of the parabola and renders point by point.
                        <linebreak/>
                        Finally, draw a line between each point to give a sense of continuity
                        <linebreak/>
                        <parameterlist kind="param">
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>parabola</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>Contains the parabola parameters</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>renderer</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>Renderer to which to draw the line</para>
                                </parameterdescription>
                            </parameteritem>
                        </parameterlist>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="analytic/src/geometry.c" line="25" column="6" bodyfile="analytic/src/geometry.c"
                          bodystart="25" bodyend="48"/>
            </memberdef>
            <memberdef kind="function" id="geometry_8c_1a423bc0666f5da3db90e89204b3f36de3" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>void</type>
                <definition>void Analytic_createCircumference</definition>
                <argsstring>(Analytic_Circumference circumference, SDL_Renderer *renderer)</argsstring>
                <name>Analytic_createCircumference</name>
                <param>
                    <type>
                        <ref refid="struct_analytic___circumference" kindref="compound">Analytic_Circumference</ref>
                    </type>
                    <declname>circumference</declname>
                </param>
                <param>
                    <type>SDL_Renderer *</type>
                    <declname>renderer</declname>
                </param>
                <briefdescription>
                    <para>Function to create a Circumference.</para>
                </briefdescription>
                <detaileddescription>
                    <para>The function calculates the radius and the coordinates
                        <linebreak/>
                        of the center and then goes to draw the circumference
                        <linebreak/>
                        using the algorithm of the intermediate point that allows
                        <linebreak/>
                        to obtain good performances and also good precision
                        <linebreak/>
                        <parameterlist kind="param">
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>circumference</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>Contains the circumference parameters</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>renderer</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>Renderer to which to draw the line</para>
                                </parameterdescription>
                            </parameteritem>
                        </parameterlist>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="analytic/src/geometry.c" line="50" column="6" bodyfile="analytic/src/geometry.c"
                          bodystart="50" bodyend="98"/>
            </memberdef>
            <memberdef kind="function" id="geometry_8c_1a7bcf2b79866a8b3387b1ab12eafe3635" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>void</type>
                <definition>void Analytic_createTangents</definition>
                <argsstring>(Analytic_Position point, Analytic_Circumference circumference, SDL_Renderer *renderer)
                </argsstring>
                <name>Analytic_createTangents</name>
                <param>
                    <type>
                        <ref refid="struct_analytic___position" kindref="compound">Analytic_Position</ref>
                    </type>
                    <declname>point</declname>
                </param>
                <param>
                    <type>
                        <ref refid="struct_analytic___circumference" kindref="compound">Analytic_Circumference</ref>
                    </type>
                    <declname>circumference</declname>
                </param>
                <param>
                    <type>SDL_Renderer *</type>
                    <declname>renderer</declname>
                </param>
                <briefdescription>
                    <para>Function to find tangents to a circumference.</para>
                </briefdescription>
                <detaileddescription>
                    <para>
                        <parameterlist kind="param">
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>point</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>Starting point for straight lines</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>circumference</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>Contains the circumference parameters</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>renderer</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>Renderer to which to draw the line</para>
                                </parameterdescription>
                            </parameteritem>
                        </parameterlist>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="analytic/src/geometry.c" line="100" column="6" bodyfile="analytic/src/geometry.c"
                          bodystart="100" bodyend="151"/>
            </memberdef>
            <memberdef kind="function" id="geometry_8c_1aea684c82b570b0f6b5ebd16d1ee672c4" prot="public" static="no"
                       const="no" explicit="no" inline="no" virt="non-virtual">
                <type>void</type>
                <definition>void Analytic_createHyperbole</definition>
                <argsstring>(Analytic_Hyperbole hyperbole, SDL_Renderer *renderer)</argsstring>
                <name>Analytic_createHyperbole</name>
                <param>
                    <type>
                        <ref refid="struct_analytic___hyperbole" kindref="compound">Analytic_Hyperbole</ref>
                    </type>
                    <declname>hyperbole</declname>
                </param>
                <param>
                    <type>SDL_Renderer *</type>
                    <declname>renderer</declname>
                </param>
                <briefdescription>
                    <para>Function to draw an hyperbole.</para>
                </briefdescription>
                <detaileddescription>
                    <para>The function identifies the type of hyperbole and then
                        <linebreak/>
                        proceeds to the drawing, they draw a line between each
                        <linebreak/>
                        point calculated in order to obtain excellent precision
                        <linebreak/>
                        without wasting resources.
                        <linebreak/>
                        <parameterlist kind="param">
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>hyperbole</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>Contains the hyperbole parameters</para>
                                </parameterdescription>
                            </parameteritem>
                            <parameteritem>
                                <parameternamelist>
                                    <parametername>renderer</parametername>
                                </parameternamelist>
                                <parameterdescription>
                                    <para>Renderer to which to draw the line</para>
                                </parameterdescription>
                            </parameteritem>
                        </parameterlist>
                    </para>
                </detaileddescription>
                <inbodydescription>
                </inbodydescription>
                <location file="analytic/src/geometry.c" line="153" column="6" bodyfile="analytic/src/geometry.c"
                          bodystart="153" bodyend="221"/>
            </memberdef>
        </sectiondef>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <programlisting>
            <codeline lineno="1">
                <highlight class="preprocessor">#include<sp/>&lt;SDL2/SDL.h&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="2">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="3">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="4">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;../../log/log.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="5">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;../global.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="6">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;../geometry.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="7">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;../functions.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="8">
                <highlight class="normal"></highlight>
                <highlight class="preprocessor">#include<sp/>&quot;../scale.h&quot;
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="9">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="10">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="geometry_8h_1a91271cf91f67ee374615ad91f4ddff9f" kindref="member">
                        Analytic_createPoint</ref>(
                    <ref refid="struct_analytic___position" kindref="compound">Analytic_Position</ref>
                    <sp/>position,<sp/>SDL_Color<sp/>color,<sp/>SDL_Renderer<sp/>*renderer)
                </highlight>
            </codeline>
            <codeline lineno="11">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="12">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SDL_SetRenderDrawColor(renderer,<sp/>color.r,<sp/>color.g,<sp/>color.b,<sp/>color.a);
                </highlight>
            </codeline>
            <codeline lineno="13">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SDL_RenderDrawPoint(renderer,
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(position.<ref
                        refid="struct_analytic___position_1ad0da36b2558901e21e7a30f6c227a45e" kindref="member">x</ref>),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(position.<ref
                        refid="struct_analytic___position_1aa4f0d3eebc3c443f9be81bf48561a217" kindref="member">y</ref>));
                </highlight>
            </codeline>
            <codeline lineno="14">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="15">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="16">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="geometry_8h_1a8f1d8e436b2a4c4a1a307270be8a479c" kindref="member">
                        Analytic_createLine</ref>(
                    <ref refid="struct_analytic___line" kindref="compound">Analytic_Line</ref>
                    <sp/>line,<sp/>SDL_Renderer<sp/>*renderer)
                </highlight>
            </codeline>
            <codeline lineno="17">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="18">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>x<sp/>=<sp/>(
                    <ref refid="analytic_2global_8h_1a3e0900de701e9d1d0acad5870bbe67c0" kindref="member">
                        SDL_WINDOW_SIZE
                    </ref>
                    <sp/>/<sp/>2)<sp/>*<sp/>-1;
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(x)<sp/>&lt;=
                    <sp/>
                    <ref refid="analytic_2global_8h_1a3e0900de701e9d1d0acad5870bbe67c0" kindref="member">
                        SDL_WINDOW_SIZE</ref>;<sp/>x<sp/>+=<sp/>0.1)
                </highlight>
            </codeline>
            <codeline lineno="19">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="20">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_analytic___position" kindref="compound">Analytic_Position</ref>
                    <sp/>position<sp/>=<sp/>{x,
                    <sp/>
                    <ref refid="functions_8h_1a6035d73bb5eb43e59b38cc63e2c63d82" kindref="member">
                        Analytic_LineFunction</ref>(line,<sp/>x)};
                </highlight>
            </codeline>
            <codeline lineno="21">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="geometry_8h_1a91271cf91f67ee374615ad91f4ddff9f" kindref="member">
                        Analytic_createPoint</ref>(position,<sp/>red,<sp/>renderer);
                </highlight>
            </codeline>
            <codeline lineno="22">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="23">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="24">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="25">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="geometry_8h_1a22dc585163e64ffc15c1b38c4edfdcbd" kindref="member">
                        Analytic_createParabola</ref>(
                    <ref refid="struct_analytic___parabola" kindref="compound">Analytic_Parabola</ref>
                    <sp/>parabola,<sp/>SDL_Renderer<sp/>*renderer)
                </highlight>
            </codeline>
            <codeline lineno="26">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="27">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SDL_SetRenderDrawColor(renderer,<sp/>purple.r,<sp/>purple.g,<sp/>purple.b,<sp/>purple.a);
                </highlight>
            </codeline>
            <codeline lineno="28">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">switch</highlight>
                <highlight class="normal"><sp/>(parabola.<ref
                        refid="struct_analytic___parabola_1a4ea833de8cbe1d97da852130706ec899" kindref="member">
                    type</ref>)
                </highlight>
            </codeline>
            <codeline lineno="29">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="30">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal"><sp/>Analytic_ParabolaY:
                </highlight>
            </codeline>
            <codeline lineno="31">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>x<sp/>=<sp/>(
                    <ref refid="analytic_2global_8h_1a3e0900de701e9d1d0acad5870bbe67c0" kindref="member">
                        SDL_WINDOW_SIZE
                    </ref>
                    <sp/>/<sp/>2)<sp/>*<sp/>-1;
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(x)<sp/>&lt;=
                    <sp/>
                    <ref refid="analytic_2global_8h_1a3e0900de701e9d1d0acad5870bbe67c0" kindref="member">
                        SDL_WINDOW_SIZE</ref>;<sp/>x<sp/>+=<sp/>0.1)
                </highlight>
            </codeline>
            <codeline lineno="32">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="33">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>x1<sp/>=<sp/>x<sp/>+<sp/>0.1,<sp/>y<sp/>=
                    <sp/>
                    <ref refid="functions_8h_1a338af7326772bf75a1f3faff419e29b5" kindref="member">
                        Analytic_ParabolaYFunction</ref>(parabola,<sp/>x),<sp/>y1<sp/>=
                    <sp/>
                    <ref refid="functions_8h_1a338af7326772bf75a1f3faff419e29b5" kindref="member">
                        Analytic_ParabolaYFunction</ref>(parabola,<sp/>x1);
                </highlight>
            </codeline>
            <codeline lineno="34">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref refid="scale_8h_1a4e63a4fe52c3a36f03346adeec9cedba"
                                                     kindref="member">Analytic_isXRelativeOK</ref>(x1)<sp/>&amp;&amp;<sp/>
                    <ref refid="scale_8h_1ada53a5722ff0085a087e802b09115555" kindref="member">
                        Analytic_isYRelativeOK</ref>(y)<sp/>&amp;&amp;<sp/>
                    <ref refid="scale_8h_1ada53a5722ff0085a087e802b09115555" kindref="member">
                        Analytic_isYRelativeOK</ref>(y1))
                </highlight>
            </codeline>
            <codeline lineno="35">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SDL_RenderDrawLine(renderer,
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(x<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(y<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(x1<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(y1<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10));
                </highlight>
            </codeline>
            <codeline lineno="36">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="37">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="38">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal"><sp/>Analytic_ParabolaX:
                </highlight>
            </codeline>
            <codeline lineno="39">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>parabola.
                    <ref refid="struct_analytic___parabola_1a4aec1a5be9d9a4a394a2e49e9744286e" kindref="member">a</ref>
                    <sp/>*=<sp/>-1;
                </highlight>
            </codeline>
            <codeline lineno="40">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>y<sp/>=<sp/>(
                    <ref refid="analytic_2global_8h_1a3e0900de701e9d1d0acad5870bbe67c0" kindref="member">
                        SDL_WINDOW_SIZE
                    </ref>
                    <sp/>/<sp/>2)<sp/>*<sp/>-1;
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(y)<sp/>&lt;=
                    <sp/>
                    <ref refid="analytic_2global_8h_1a3e0900de701e9d1d0acad5870bbe67c0" kindref="member">
                        SDL_WINDOW_SIZE</ref>;<sp/>y<sp/>+=<sp/>0.1)
                </highlight>
            </codeline>
            <codeline lineno="41">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="42">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>y1<sp/>=<sp/>y<sp/>+<sp/>0.1,<sp/>x<sp/>=
                    <sp/>
                    <ref refid="functions_8h_1a3d5ec75330f5ff3427823ed0c74c89ab" kindref="member">
                        Analytic_ParabolaXFunction</ref>(parabola,<sp/>y),<sp/>x1<sp/>=
                    <sp/>
                    <ref refid="functions_8h_1a3d5ec75330f5ff3427823ed0c74c89ab" kindref="member">
                        Analytic_ParabolaXFunction</ref>(parabola,<sp/>y1);
                </highlight>
            </codeline>
            <codeline lineno="43">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref refid="scale_8h_1ada53a5722ff0085a087e802b09115555"
                                                     kindref="member">Analytic_isYRelativeOK</ref>(y1)<sp/>&amp;&amp;<sp/>
                    <ref refid="scale_8h_1a4e63a4fe52c3a36f03346adeec9cedba" kindref="member">
                        Analytic_isXRelativeOK</ref>(x)<sp/>&amp;&amp;<sp/>
                    <ref refid="scale_8h_1a4e63a4fe52c3a36f03346adeec9cedba" kindref="member">
                        Analytic_isXRelativeOK</ref>(x1))
                </highlight>
            </codeline>
            <codeline lineno="44">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SDL_RenderDrawLine(renderer,
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(x<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(y<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(x1<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(y1<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10));
                </highlight>
            </codeline>
            <codeline lineno="45">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="46">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="47">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="48">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="49">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="50">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="geometry_8h_1a423bc0666f5da3db90e89204b3f36de3" kindref="member">
                        Analytic_createCircumference</ref>(
                    <ref refid="struct_analytic___circumference" kindref="compound">Analytic_Circumference</ref>
                    <sp/>circumference,<sp/>SDL_Renderer<sp/>*renderer)
                </highlight>
            </codeline>
            <codeline lineno="51">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="52">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>radius<sp/>=
                    <sp/>
                    <ref refid="functions_8h_1a3f76b8b0d36bb8450732ac5b7ad1a863" kindref="member">
                        Analytic_CircumferenceRadiusFunction</ref>(circumference)<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10;
                </highlight>
            </codeline>
            <codeline lineno="53">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>x_centre<sp/>=
                    <sp/>
                    <ref refid="functions_8h_1abe5a4543009708604f165fc7db8bdd4c" kindref="member">
                        Analytic_CircumferenceXCentreFunction</ref>(circumference)<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10;
                </highlight>
            </codeline>
            <codeline lineno="54">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>y_centre<sp/>=
                    <sp/>
                    <ref refid="functions_8h_1a92231210c9c966ede33e488827b542a0" kindref="member">
                        Analytic_CircumferenceYCentreFunction</ref>(circumference)<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10;
                </highlight>
            </codeline>
            <codeline lineno="55">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">int</highlight>
                <highlight class="normal"><sp/>x<sp/>=<sp/>radius,<sp/>y<sp/>=<sp/>0,<sp/>err<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="56">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="57">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(!<ref refid="scale_8h_1a4e63a4fe52c3a36f03346adeec9cedba"
                                                      kindref="member">Analytic_isXRelativeOK</ref>(x_centre<sp/>+<sp/>
                    radius)<sp/>&amp;&amp;<sp/>!<ref refid="scale_8h_1ada53a5722ff0085a087e802b09115555"
                                                     kindref="member">Analytic_isYRelativeOK</ref>(y_centre<sp/>+<sp/>
                    radius))
                </highlight>
            </codeline>
            <codeline lineno="58">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>log_debug(
                </highlight>
                <highlight class="stringliteral">&quot;The<sp/>centre<sp/>of<sp/>the<sp/>circumference<sp/>is<sp/>out
                    <sp/>of<sp/>the<sp/>render<sp/>view&quot;
                </highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="59">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="60">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">while</highlight>
                <highlight class="normal"><sp/>(x<sp/>&gt;=<sp/>y)
                </highlight>
            </codeline>
            <codeline lineno="61">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="62">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_analytic___position" kindref="compound">Analytic_Position</ref>
                    <sp/>position<sp/>=<sp/>{x_centre<sp/>+<sp/>x,<sp/>y_centre<sp/>+<sp/>y};
                </highlight>
            </codeline>
            <codeline lineno="63">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="geometry_8h_1a91271cf91f67ee374615ad91f4ddff9f" kindref="member">
                        Analytic_createPoint</ref>(position,<sp/>green,<sp/>renderer);
                </highlight>
            </codeline>
            <codeline lineno="64">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>position.
                    <ref refid="struct_analytic___position_1ad0da36b2558901e21e7a30f6c227a45e" kindref="member">x</ref>
                    <sp/>=<sp/>x_centre<sp/>-<sp/>x;
                </highlight>
            </codeline>
            <codeline lineno="65">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>position.
                    <ref refid="struct_analytic___position_1aa4f0d3eebc3c443f9be81bf48561a217" kindref="member">y</ref>
                    <sp/>=<sp/>y_centre<sp/>+<sp/>y;
                </highlight>
            </codeline>
            <codeline lineno="66">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="geometry_8h_1a91271cf91f67ee374615ad91f4ddff9f" kindref="member">
                        Analytic_createPoint</ref>(position,<sp/>green,<sp/>renderer);
                </highlight>
            </codeline>
            <codeline lineno="67">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>position.
                    <ref refid="struct_analytic___position_1ad0da36b2558901e21e7a30f6c227a45e" kindref="member">x</ref>
                    <sp/>=<sp/>x_centre<sp/>+<sp/>x;
                </highlight>
            </codeline>
            <codeline lineno="68">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>position.
                    <ref refid="struct_analytic___position_1aa4f0d3eebc3c443f9be81bf48561a217" kindref="member">y</ref>
                    <sp/>=<sp/>y_centre<sp/>-<sp/>y;
                </highlight>
            </codeline>
            <codeline lineno="69">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="geometry_8h_1a91271cf91f67ee374615ad91f4ddff9f" kindref="member">
                        Analytic_createPoint</ref>(position,<sp/>green,<sp/>renderer);
                </highlight>
            </codeline>
            <codeline lineno="70">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>position.
                    <ref refid="struct_analytic___position_1ad0da36b2558901e21e7a30f6c227a45e" kindref="member">x</ref>
                    <sp/>=<sp/>x_centre<sp/>-<sp/>x;
                </highlight>
            </codeline>
            <codeline lineno="71">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>position.
                    <ref refid="struct_analytic___position_1aa4f0d3eebc3c443f9be81bf48561a217" kindref="member">y</ref>
                    <sp/>=<sp/>y_centre<sp/>-<sp/>y;
                </highlight>
            </codeline>
            <codeline lineno="72">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="geometry_8h_1a91271cf91f67ee374615ad91f4ddff9f" kindref="member">
                        Analytic_createPoint</ref>(position,<sp/>green,<sp/>renderer);
                </highlight>
            </codeline>
            <codeline lineno="73">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>position.
                    <ref refid="struct_analytic___position_1ad0da36b2558901e21e7a30f6c227a45e" kindref="member">x</ref>
                    <sp/>=<sp/>x_centre<sp/>+<sp/>y;
                </highlight>
            </codeline>
            <codeline lineno="74">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>position.
                    <ref refid="struct_analytic___position_1aa4f0d3eebc3c443f9be81bf48561a217" kindref="member">y</ref>
                    <sp/>=<sp/>y_centre<sp/>+<sp/>x;
                </highlight>
            </codeline>
            <codeline lineno="75">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="geometry_8h_1a91271cf91f67ee374615ad91f4ddff9f" kindref="member">
                        Analytic_createPoint</ref>(position,<sp/>green,<sp/>renderer);
                </highlight>
            </codeline>
            <codeline lineno="76">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>position.
                    <ref refid="struct_analytic___position_1ad0da36b2558901e21e7a30f6c227a45e" kindref="member">x</ref>
                    <sp/>=<sp/>x_centre<sp/>-<sp/>y;
                </highlight>
            </codeline>
            <codeline lineno="77">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>position.
                    <ref refid="struct_analytic___position_1aa4f0d3eebc3c443f9be81bf48561a217" kindref="member">y</ref>
                    <sp/>=<sp/>y_centre<sp/>+<sp/>x;
                </highlight>
            </codeline>
            <codeline lineno="78">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="geometry_8h_1a91271cf91f67ee374615ad91f4ddff9f" kindref="member">
                        Analytic_createPoint</ref>(position,<sp/>green,<sp/>renderer);
                </highlight>
            </codeline>
            <codeline lineno="79">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>position.
                    <ref refid="struct_analytic___position_1ad0da36b2558901e21e7a30f6c227a45e" kindref="member">x</ref>
                    <sp/>=<sp/>x_centre<sp/>+<sp/>y;
                </highlight>
            </codeline>
            <codeline lineno="80">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>position.
                    <ref refid="struct_analytic___position_1aa4f0d3eebc3c443f9be81bf48561a217" kindref="member">y</ref>
                    <sp/>=<sp/>y_centre<sp/>-<sp/>x;
                </highlight>
            </codeline>
            <codeline lineno="81">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="geometry_8h_1a91271cf91f67ee374615ad91f4ddff9f" kindref="member">
                        Analytic_createPoint</ref>(position,<sp/>green,<sp/>renderer);
                </highlight>
            </codeline>
            <codeline lineno="82">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>position.
                    <ref refid="struct_analytic___position_1ad0da36b2558901e21e7a30f6c227a45e" kindref="member">x</ref>
                    <sp/>=<sp/>x_centre<sp/>-<sp/>y;
                </highlight>
            </codeline>
            <codeline lineno="83">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>position.
                    <ref refid="struct_analytic___position_1aa4f0d3eebc3c443f9be81bf48561a217" kindref="member">y</ref>
                    <sp/>=<sp/>y_centre<sp/>-<sp/>x;
                </highlight>
            </codeline>
            <codeline lineno="84">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="geometry_8h_1a91271cf91f67ee374615ad91f4ddff9f" kindref="member">
                        Analytic_createPoint</ref>(position,<sp/>green,<sp/>renderer);
                </highlight>
            </codeline>
            <codeline lineno="85">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="86">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(err<sp/>&lt;=<sp/>0)
                </highlight>
            </codeline>
            <codeline lineno="87">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="88">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>y<sp/>+=<sp/>1;
                </highlight>
            </codeline>
            <codeline lineno="89">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>err<sp/>+=<sp/>2<sp/>*<sp/>y<sp/>+<sp/>1;
                </highlight>
            </codeline>
            <codeline lineno="90">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="91">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="92">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(err<sp/>&gt;<sp/>0)
                </highlight>
            </codeline>
            <codeline lineno="93">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="94">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>x<sp/>-=<sp/>1;
                </highlight>
            </codeline>
            <codeline lineno="95">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>err<sp/>-=<sp/>2<sp/>*<sp/>x<sp/>+<sp/>1;
                </highlight>
            </codeline>
            <codeline lineno="96">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="97">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="98">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="99">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="100">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="geometry_8h_1a7bcf2b79866a8b3387b1ab12eafe3635" kindref="member">
                        Analytic_createTangents</ref>(
                    <ref refid="struct_analytic___position" kindref="compound">Analytic_Position</ref>
                    <sp/>point,
                    <sp/>
                    <ref refid="struct_analytic___circumference" kindref="compound">Analytic_Circumference</ref>
                    <sp/>circumference,<sp/>SDL_Renderer<sp/>*renderer)
                </highlight>
            </codeline>
            <codeline lineno="101">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="102">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>cx0<sp/>=
                    <sp/>
                    <ref refid="functions_8h_1abe5a4543009708604f165fc7db8bdd4c" kindref="member">
                        Analytic_CircumferenceXCentreFunction</ref>(circumference);
                </highlight>
            </codeline>
            <codeline lineno="103">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>cy0<sp/>=
                    <sp/>
                    <ref refid="functions_8h_1a92231210c9c966ede33e488827b542a0" kindref="member">
                        Analytic_CircumferenceYCentreFunction</ref>(circumference);
                </highlight>
            </codeline>
            <codeline lineno="104">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>cx1<sp/>=<sp/>point.<ref
                        refid="struct_analytic___position_1ad0da36b2558901e21e7a30f6c227a45e" kindref="member">x</ref>;
                </highlight>
            </codeline>
            <codeline lineno="105">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>cy1<sp/>=<sp/>-point.<ref
                        refid="struct_analytic___position_1aa4f0d3eebc3c443f9be81bf48561a217" kindref="member">y</ref>;
                </highlight>
            </codeline>
            <codeline lineno="106">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>dx<sp/>=<sp/>cx0<sp/>-<sp/>cx1;
                </highlight>
            </codeline>
            <codeline lineno="107">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>dy<sp/>=<sp/>cy0<sp/>-<sp/>cy1;
                </highlight>
            </codeline>
            <codeline lineno="108">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>dist<sp/>=<sp/>sqrt(dx<sp/>*<sp/>dx<sp/>+<sp/>dy<sp/>*<sp/>dy);
                </highlight>
            </codeline>
            <codeline lineno="109">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>r0<sp/>=
                    <sp/>
                    <ref refid="functions_8h_1a3f76b8b0d36bb8450732ac5b7ad1a863" kindref="member">
                        Analytic_CircumferenceRadiusFunction</ref>(circumference);
                </highlight>
            </codeline>
            <codeline lineno="110">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>r1<sp/>=<sp/>sqrt(pow(dist,<sp/>2)<sp/>-<sp/>pow(r0,<sp/>2));
                </highlight>
            </codeline>
            <codeline lineno="111">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="112">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>((
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal">)dist<sp/>&lt;<sp/>(
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal">)r0)</highlight>
            </codeline>
            <codeline lineno="113">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="114">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>log_fatal(
                </highlight>
                <highlight class="stringliteral">&quot;There<sp/>are<sp/>no<sp/>tangent<sp/>points!&quot;
                </highlight>
                <highlight class="normal">);</highlight>
            </codeline>
            <codeline lineno="115">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>exit(EXIT_FAILURE);
                </highlight>
            </codeline>
            <codeline lineno="116">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="117">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>((
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal">)dist<sp/>==<sp/>(
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal">)r0)</highlight>
            </codeline>
            <codeline lineno="118">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="119">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_analytic___line" kindref="compound">Analytic_Line</ref>
                    <sp/>tangent1;
                </highlight>
            </codeline>
            <codeline lineno="120">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>m<sp/>=<sp/>(cy1<sp/>-<sp/>cy0)<sp/>/<sp/>(cx1<sp/>-<sp/>cx0);
                </highlight>
            </codeline>
            <codeline lineno="121">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>q<sp/>=<sp/>(cy1<sp/>-<sp/>(m<sp/>*<sp/>cx1));
                </highlight>
            </codeline>
            <codeline lineno="122">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>tangent1.
                    <ref refid="struct_analytic___line_1ac51334f57ef8b81c0629c9421798c344" kindref="member">m</ref>
                    <sp/>=<sp/>1<sp/>/<sp/>m;
                </highlight>
            </codeline>
            <codeline lineno="123">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>tangent1.
                    <ref refid="struct_analytic___line_1a0a19a0620af7373e3ddba0ce4e1058e1" kindref="member">q</ref>
                    <sp/>=<sp/>-q;
                </highlight>
            </codeline>
            <codeline lineno="124">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="geometry_8h_1a8f1d8e436b2a4c4a1a307270be8a479c" kindref="member">
                        Analytic_createLine</ref>(tangent1,<sp/>renderer);
                </highlight>
            </codeline>
            <codeline lineno="125">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>log_debug(
                </highlight>
                <highlight class="stringliteral">&quot;Found<sp/>a<sp/>tagent:<sp/>m<sp/>=<sp/>%f<sp/>and<sp/>q<sp/>=
                    <sp/>%f&quot;
                </highlight>
                <highlight class="normal">,<sp/>m,<sp/>-q);
                </highlight>
            </codeline>
            <codeline lineno="126">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">return</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="127">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="128">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>a<sp/>=<sp/>(r0<sp/>*<sp/>r0<sp/>-
                </highlight>
            </codeline>
            <codeline lineno="129">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>r1<sp/>*<sp/>r1<sp/>+<sp/>dist<sp/>*<sp/>dist)<sp/>/
                </highlight>
            </codeline>
            <codeline lineno="130">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>(2<sp/>*<sp/>dist);
                </highlight>
            </codeline>
            <codeline lineno="131">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>h<sp/>=<sp/>sqrt(r0<sp/>*<sp/>r0<sp/>-<sp/>a<sp/>*<sp/>a);
                </highlight>
            </codeline>
            <codeline lineno="132">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>cx2<sp/>=<sp/>cx0<sp/>+<sp/>a<sp/>*<sp/>(cx1<sp/>-<sp/>cx0)<sp/>/<sp/>
                    dist;
                </highlight>
            </codeline>
            <codeline lineno="133">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">double</highlight>
                <highlight class="normal"><sp/>cy2<sp/>=<sp/>cy0<sp/>+<sp/>a<sp/>*<sp/>(cy1<sp/>-<sp/>cy0)<sp/>/<sp/>
                    dist;
                </highlight>
            </codeline>
            <codeline lineno="134">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>x1<sp/>=<sp/>(float)(cx2<sp/>+<sp/>h<sp/>*<sp/>(cy1<sp/>-<sp/>cy0)<sp/>/
                    <sp/>dist);
                </highlight>
            </codeline>
            <codeline lineno="135">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>y1<sp/>=<sp/>(float)(cy2<sp/>-<sp/>h<sp/>*<sp/>(cx1<sp/>-<sp/>cx0)<sp/>/
                    <sp/>dist);
                </highlight>
            </codeline>
            <codeline lineno="136">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>x2<sp/>=<sp/>(float)(cx2<sp/>-<sp/>h<sp/>*<sp/>(cy1<sp/>-<sp/>cy0)<sp/>/
                    <sp/>dist);
                </highlight>
            </codeline>
            <codeline lineno="137">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>y2<sp/>=<sp/>(float)(cy2<sp/>+<sp/>h<sp/>*<sp/>(cx1<sp/>-<sp/>cx0)<sp/>/
                    <sp/>dist);
                </highlight>
            </codeline>
            <codeline lineno="138">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>m1<sp/>=<sp/>(y1<sp/>-<sp/>cy1)<sp/>/<sp/>(x1<sp/>-<sp/>cx1);
                </highlight>
            </codeline>
            <codeline lineno="139">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>m2<sp/>=<sp/>(y2<sp/>-<sp/>cy1)<sp/>/<sp/>(x2<sp/>-<sp/>cx1);
                </highlight>
            </codeline>
            <codeline lineno="140">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>q1<sp/>=<sp/>(y1<sp/>-<sp/>(m1<sp/>*<sp/>x1));
                </highlight>
            </codeline>
            <codeline lineno="141">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>q2<sp/>=<sp/>(y2<sp/>-<sp/>(m2<sp/>*<sp/>x2));
                </highlight>
            </codeline>
            <codeline lineno="142">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="struct_analytic___line" kindref="compound">Analytic_Line</ref>
                    <sp/>tangent1,<sp/>tangent2;
                </highlight>
            </codeline>
            <codeline lineno="143">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>tangent1.
                    <ref refid="struct_analytic___line_1ac51334f57ef8b81c0629c9421798c344" kindref="member">m</ref>
                    <sp/>=<sp/>-m1;
                </highlight>
            </codeline>
            <codeline lineno="144">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>tangent1.
                    <ref refid="struct_analytic___line_1a0a19a0620af7373e3ddba0ce4e1058e1" kindref="member">q</ref>
                    <sp/>=<sp/>-q1;
                </highlight>
            </codeline>
            <codeline lineno="145">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>tangent2.
                    <ref refid="struct_analytic___line_1ac51334f57ef8b81c0629c9421798c344" kindref="member">m</ref>
                    <sp/>=<sp/>-m2;
                </highlight>
            </codeline>
            <codeline lineno="146">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>tangent2.
                    <ref refid="struct_analytic___line_1a0a19a0620af7373e3ddba0ce4e1058e1" kindref="member">q</ref>
                    <sp/>=<sp/>-q2;
                </highlight>
            </codeline>
            <codeline lineno="147">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="geometry_8h_1a8f1d8e436b2a4c4a1a307270be8a479c" kindref="member">
                        Analytic_createLine</ref>(tangent1,<sp/>renderer);
                </highlight>
            </codeline>
            <codeline lineno="148">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <ref refid="geometry_8h_1a8f1d8e436b2a4c4a1a307270be8a479c" kindref="member">
                        Analytic_createLine</ref>(tangent2,<sp/>renderer);
                </highlight>
            </codeline>
            <codeline lineno="149">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>log_debug(
                </highlight>
                <highlight class="stringliteral">&quot;Found<sp/>a<sp/>tagent:<sp/>m<sp/>=<sp/>%f<sp/>and<sp/>q<sp/>=
                    <sp/>%f&quot;
                </highlight>
                <highlight class="normal">,<sp/>-m1,<sp/>-q1);
                </highlight>
            </codeline>
            <codeline lineno="150">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>log_debug(
                </highlight>
                <highlight class="stringliteral">&quot;Found<sp/>a<sp/>tagent:<sp/>m<sp/>=<sp/>%f<sp/>and<sp/>q<sp/>=
                    <sp/>%f&quot;
                </highlight>
                <highlight class="normal">,<sp/>-m2,<sp/>-q2);
                </highlight>
            </codeline>
            <codeline lineno="151">
                <highlight class="normal">}</highlight>
            </codeline>
            <codeline lineno="152">
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="153">
                <highlight class="normal"></highlight>
                <highlight class="keywordtype">void</highlight>
                <highlight class="normal">
                    <sp/>
                    <ref refid="geometry_8h_1aea684c82b570b0f6b5ebd16d1ee672c4" kindref="member">
                        Analytic_createHyperbole</ref>(
                    <ref refid="struct_analytic___hyperbole" kindref="compound">Analytic_Hyperbole</ref>
                    <sp/>hyperbole,<sp/>SDL_Renderer<sp/>*renderer)
                </highlight>
            </codeline>
            <codeline lineno="154">
                <highlight class="normal">{</highlight>
            </codeline>
            <codeline lineno="155">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SDL_SetRenderDrawColor(renderer,<sp/>yellow.r,<sp/>yellow.g,<sp/>yellow.b,<sp/>yellow.a);
                </highlight>
            </codeline>
            <codeline lineno="156">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">switch</highlight>
                <highlight class="normal"><sp/>(hyperbole.<ref
                        refid="struct_analytic___hyperbole_1a97f046b32491dc439326d6e31b1e1f0b" kindref="member">
                    type</ref>)
                </highlight>
            </codeline>
            <codeline lineno="157">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="158">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal"><sp/>Analytic_HyperboleY:
                </highlight>
            </codeline>
            <codeline lineno="159">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>x0<sp/>=<sp/>((
                    <ref refid="analytic_2global_8h_1a3e0900de701e9d1d0acad5870bbe67c0" kindref="member">
                        SDL_WINDOW_SIZE
                    </ref>
                    <sp/>/<sp/>2)<sp/>*<sp/>-1);<sp/>round(x0)<sp/>!=<sp/>0;<sp/>x0<sp/>+=<sp/>0.1)
                </highlight>
            </codeline>
            <codeline lineno="160">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="161">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>x1<sp/>=<sp/>x0<sp/>+<sp/>0.1,<sp/>y0<sp/>=
                    <sp/>
                    <ref refid="functions_8h_1a40c3be7865f7cc46313f47c5a29ac906" kindref="member">
                        Analytic_HyperboleYFunction</ref>(hyperbole,<sp/>x0),<sp/>y1<sp/>=
                    <sp/>
                    <ref refid="functions_8h_1a40c3be7865f7cc46313f47c5a29ac906" kindref="member">
                        Analytic_HyperboleYFunction</ref>(hyperbole,<sp/>x1);
                </highlight>
            </codeline>
            <codeline lineno="162">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(isnan(y1))
                </highlight>
            </codeline>
            <codeline lineno="163">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>y1<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="164">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref refid="scale_8h_1a4e63a4fe52c3a36f03346adeec9cedba"
                                                     kindref="member">Analytic_isXRelativeOK</ref>(x0)<sp/>&amp;&amp;<sp/>
                    <ref refid="scale_8h_1a4e63a4fe52c3a36f03346adeec9cedba" kindref="member">
                        Analytic_isXRelativeOK</ref>(x1)<sp/>&amp;&amp;<sp/>
                    <ref refid="scale_8h_1ada53a5722ff0085a087e802b09115555" kindref="member">
                        Analytic_isYRelativeOK</ref>(y0)<sp/>&amp;&amp;<sp/>
                    <ref refid="scale_8h_1ada53a5722ff0085a087e802b09115555" kindref="member">
                        Analytic_isYRelativeOK</ref>(y1))
                </highlight>
            </codeline>
            <codeline lineno="165">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="166">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SDL_RenderDrawLine(renderer,
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(x0<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(y0<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(x1<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(y1<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10));
                </highlight>
            </codeline>
            <codeline lineno="167">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SDL_RenderDrawLine(renderer,
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(-x0<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(y0<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(-x1<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(y1<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10));
                </highlight>
            </codeline>
            <codeline lineno="168">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SDL_RenderDrawLine(renderer,
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(-x0<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(-y0<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(-x1<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(-y1<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10));
                </highlight>
            </codeline>
            <codeline lineno="169">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SDL_RenderDrawLine(renderer,
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(x0<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(-y0<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(x1<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(-y1<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10));
                </highlight>
            </codeline>
            <codeline lineno="170">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="171">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="172">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="173">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal"><sp/>Analytic_HyperboleX:
                </highlight>
            </codeline>
            <codeline lineno="174">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>x0<sp/>=<sp/>((
                    <ref refid="analytic_2global_8h_1a3e0900de701e9d1d0acad5870bbe67c0" kindref="member">
                        SDL_WINDOW_SIZE
                    </ref>
                    <sp/>/<sp/>2)<sp/>*<sp/>-1);<sp/>floor(x0)<sp/>!=<sp/>0;<sp/>x0<sp/>+=<sp/>0.1)
                </highlight>
            </codeline>
            <codeline lineno="175">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="176">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>x1<sp/>=<sp/>x0<sp/>+<sp/>0.1,<sp/>y0<sp/>=
                    <sp/>
                    <ref refid="functions_8h_1a17880b2292a03fb34fe9249bca44d5c8" kindref="member">
                        Analytic_HyperboleXFunction</ref>(hyperbole,<sp/>x0),<sp/>y1<sp/>=
                    <sp/>
                    <ref refid="functions_8h_1a17880b2292a03fb34fe9249bca44d5c8" kindref="member">
                        Analytic_HyperboleXFunction</ref>(hyperbole,<sp/>x1);
                </highlight>
            </codeline>
            <codeline lineno="177">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(isnan(y1))
                </highlight>
            </codeline>
            <codeline lineno="178">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>y1<sp/>=<sp/>0;
                </highlight>
            </codeline>
            <codeline lineno="179">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref refid="scale_8h_1a4e63a4fe52c3a36f03346adeec9cedba"
                                                     kindref="member">Analytic_isXRelativeOK</ref>(x0)<sp/>&amp;&amp;<sp/>
                    <ref refid="scale_8h_1a4e63a4fe52c3a36f03346adeec9cedba" kindref="member">
                        Analytic_isXRelativeOK</ref>(x1)<sp/>&amp;&amp;<sp/>
                    <ref refid="scale_8h_1ada53a5722ff0085a087e802b09115555" kindref="member">
                        Analytic_isYRelativeOK</ref>(y0)<sp/>&amp;&amp;<sp/>
                    <ref refid="scale_8h_1ada53a5722ff0085a087e802b09115555" kindref="member">
                        Analytic_isYRelativeOK</ref>(y1))
                </highlight>
            </codeline>
            <codeline lineno="180">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="181">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SDL_RenderDrawLine(renderer,
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(x0<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(y0<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(x1<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(y1<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10));
                </highlight>
            </codeline>
            <codeline lineno="182">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SDL_RenderDrawLine(renderer,
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(-x0<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(y0<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(-x1<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(y1<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10));
                </highlight>
            </codeline>
            <codeline lineno="183">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SDL_RenderDrawLine(renderer,
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(-x0<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(-y0<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(-x1<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(-y1<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10));
                </highlight>
            </codeline>
            <codeline lineno="184">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SDL_RenderDrawLine(renderer,
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(x0<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(-y0<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(x1<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(-y1<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10));
                </highlight>
            </codeline>
            <codeline lineno="185">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="186">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="187">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="188">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal"><sp/>Analytic_HyperboleK:
                </highlight>
            </codeline>
            <codeline lineno="189">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>x0<sp/>=<sp/>((
                    <ref refid="analytic_2global_8h_1a3e0900de701e9d1d0acad5870bbe67c0" kindref="member">
                        SDL_WINDOW_SIZE
                    </ref>
                    <sp/>/<sp/>2)<sp/>*<sp/>-1);
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(x0)<sp/>&lt;=
                    <sp/>
                    <ref refid="analytic_2global_8h_1a3e0900de701e9d1d0acad5870bbe67c0" kindref="member">
                        SDL_WINDOW_SIZE</ref>;<sp/>x0<sp/>+=<sp/>0.1)
                </highlight>
            </codeline>
            <codeline lineno="190">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="191">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>((
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal">)(roundf(x0<sp/>*<sp/>10)<sp/>/<sp/>10)<sp/>==<sp/>(
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal">)-0.1)
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>PREVENT<sp/>NAN<sp/>RESULT
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="192">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">continue</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="193">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>x1<sp/>=<sp/>x0<sp/>+<sp/>0.1,<sp/>y0<sp/>=
                    <sp/>
                    <ref refid="functions_8h_1abca3c5edb5a119eb4976ec375cf3abea" kindref="member">
                        Analytic_HyperboleKFunction</ref>(hyperbole,<sp/>x0),<sp/>y1<sp/>=
                    <sp/>
                    <ref refid="functions_8h_1abca3c5edb5a119eb4976ec375cf3abea" kindref="member">
                        Analytic_HyperboleKFunction</ref>(hyperbole,<sp/>x1);
                </highlight>
            </codeline>
            <codeline lineno="194">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref refid="scale_8h_1a4e63a4fe52c3a36f03346adeec9cedba"
                                                     kindref="member">Analytic_isXRelativeOK</ref>(x0)<sp/>&amp;&amp;<sp/>
                    <ref refid="scale_8h_1a4e63a4fe52c3a36f03346adeec9cedba" kindref="member">
                        Analytic_isXRelativeOK</ref>(x1)<sp/>&amp;&amp;<sp/>
                    <ref refid="scale_8h_1ada53a5722ff0085a087e802b09115555" kindref="member">
                        Analytic_isYRelativeOK</ref>(y0)<sp/>&amp;&amp;<sp/>
                    <ref refid="scale_8h_1ada53a5722ff0085a087e802b09115555" kindref="member">
                        Analytic_isYRelativeOK</ref>(y1))
                </highlight>
            </codeline>
            <codeline lineno="195">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="196">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SDL_RenderDrawLine(renderer,
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(x0<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(y0<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(x1<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(y1<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10));
                </highlight>
            </codeline>
            <codeline lineno="197">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="198">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="199">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="200">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">case</highlight>
                <highlight class="normal"><sp/>Analytic_HyperboleHomographic:
                </highlight>
            </codeline>
            <codeline lineno="201">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="202">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SDL_SetRenderDrawColor(renderer,<sp/>red.r,<sp/>red.g,<sp/>red.b,<sp/>red.a);
                </highlight>
            </codeline>
            <codeline lineno="203">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>firstAxe<sp/>=<sp/>(-hyperbole.<ref
                        refid="struct_analytic___hyperbole_1a3fbbd8a3959e76a2bc3455d3bade52dc" kindref="member">d</ref>)
                    <sp/>/<sp/>hyperbole.<ref refid="struct_analytic___hyperbole_1ae78103ab33f03590e84ff7bc735629d7"
                                              kindref="member">c</ref>;
                </highlight>
            </codeline>
            <codeline lineno="204">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>secondAxe<sp/>=<sp/>(hyperbole.
                    <ref refid="struct_analytic___hyperbole_1a4aec1a5be9d9a4a394a2e49e9744286e" kindref="member">a</ref>
                    <sp/>/<sp/>hyperbole.<ref refid="struct_analytic___hyperbole_1ae78103ab33f03590e84ff7bc735629d7"
                                              kindref="member">c</ref>);
                </highlight>
            </codeline>
            <codeline lineno="205">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SDL_RenderDrawLine(renderer,
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(firstAxe<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="analytic_2global_8h_1a3e0900de701e9d1d0acad5870bbe67c0" kindref="member">
                        SDL_WINDOW_SIZE</ref>,
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(firstAxe<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),<sp/>0);
                </highlight>
            </codeline>
            <codeline lineno="206">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SDL_RenderDrawLine(renderer,<sp/>0,
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(secondAxe<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="analytic_2global_8h_1a3e0900de701e9d1d0acad5870bbe67c0" kindref="member">
                        SDL_WINDOW_SIZE</ref>,
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(secondAxe<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10));
                </highlight>
            </codeline>
            <codeline lineno="207">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SDL_SetRenderDrawColor(renderer,<sp/>yellow.r,<sp/>yellow.g,<sp/>yellow.b,<sp/>yellow.a);
                </highlight>
            </codeline>
            <codeline lineno="208">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">for</highlight>
                <highlight class="normal"><sp/>(
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>x0<sp/>=<sp/>((
                    <ref refid="analytic_2global_8h_1a3e0900de701e9d1d0acad5870bbe67c0" kindref="member">
                        SDL_WINDOW_SIZE
                    </ref>
                    <sp/>/<sp/>2)<sp/>*<sp/>-1);
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(x0)<sp/>&lt;=
                    <sp/>
                    <ref refid="analytic_2global_8h_1a3e0900de701e9d1d0acad5870bbe67c0" kindref="member">
                        SDL_WINDOW_SIZE</ref>;<sp/>x0<sp/>+=<sp/>0.1)
                </highlight>
            </codeline>
            <codeline lineno="209">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="210">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal"><sp/>x1<sp/>=<sp/>x0<sp/>+<sp/>0.1,<sp/>y0<sp/>=
                    <sp/>
                    <ref refid="functions_8h_1a8505a4fc8732149bc6c3768bf4e91c3e" kindref="member">
                        Analytic_HyperboleHomographicFunction</ref>(hyperbole,<sp/>x0),<sp/>y1<sp/>=
                    <sp/>
                    <ref refid="functions_8h_1a8505a4fc8732149bc6c3768bf4e91c3e" kindref="member">
                        Analytic_HyperboleHomographicFunction</ref>(hyperbole,<sp/>x1);
                </highlight>
            </codeline>
            <codeline lineno="211">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>((
                </highlight>
                <highlight class="keywordtype">float</highlight>
                <highlight class="normal">)(roundf(x1<sp/>*<sp/>10)<sp/>/<sp/>10)<sp/>==<sp/>firstAxe)
                    <sp/>
                </highlight>
                <highlight class="comment">//<sp/>PREVENT<sp/>DRAWING<sp/>THE<sp/>AXE
                </highlight>
                <highlight class="normal"></highlight>
            </codeline>
            <codeline lineno="212">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">continue</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="213">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">if</highlight>
                <highlight class="normal"><sp/>(<ref refid="scale_8h_1a4e63a4fe52c3a36f03346adeec9cedba"
                                                     kindref="member">Analytic_isXRelativeOK</ref>(x0)<sp/>&amp;&amp;<sp/>
                    <ref refid="scale_8h_1a4e63a4fe52c3a36f03346adeec9cedba" kindref="member">
                        Analytic_isXRelativeOK</ref>(x1)<sp/>&amp;&amp;<sp/>
                    <ref refid="scale_8h_1ada53a5722ff0085a087e802b09115555" kindref="member">
                        Analytic_isYRelativeOK</ref>(y0)<sp/>&amp;&amp;<sp/>
                    <ref refid="scale_8h_1ada53a5722ff0085a087e802b09115555" kindref="member">
                        Analytic_isYRelativeOK</ref>(y1))
                </highlight>
            </codeline>
            <codeline lineno="214">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>{
                </highlight>
            </codeline>
            <codeline lineno="215">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>SDL_RenderDrawLine(renderer,
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(x0<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(y0<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a1b94b66e4fd4dbf04d6de215caa52d5b" kindref="member">
                        Analytic_convertXAbsolute</ref>(x1<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10),
                    <sp/>
                    <ref refid="scale_8h_1a172cef737d77c0147c24a74fa00be51c" kindref="member">
                        Analytic_convertYAbsolute</ref>(y1<sp/>*
                    <sp/>
                    <ref refid="analytic_2global_8h_1aa7a31ad64d830ee62750ac6bc1303442" kindref="member">DIVISOR</ref>
                    <sp/>/<sp/>10));
                </highlight>
            </codeline>
            <codeline lineno="216">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="217">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="218">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>
                </highlight>
                <highlight class="keywordflow">break</highlight>
                <highlight class="normal">;</highlight>
            </codeline>
            <codeline lineno="219">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="220">
                <highlight class="normal">
                    <sp/>
                    <sp/>
                    <sp/>
                    <sp/>}
                </highlight>
            </codeline>
            <codeline lineno="221">
                <highlight class="normal">}</highlight>
            </codeline>
        </programlisting>
        <location file="analytic/src/geometry.c"/>
    </compounddef>
</doxygen>
